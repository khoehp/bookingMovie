{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\New folder\\\\31-08-2022-10-15-45-archive\\\\src\\\\app\\\\Guard.js\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst createRoute = condition => {\n  return props => {\n    const {\n      path,\n      component,\n      redirectPath\n    } = props;\n\n    if (condition()) {\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: component\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: redirectPath\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  };\n};\n\nconst checkAuth = () => {\n  if (!localStorage.getItem(\"token\")) {\n    return true;\n  }\n\n  return false; //check nếu localstorage chưa có token => chưa login => vào\n  // localstorage có token => login => đẩy đi qua home\n};\n\nexport const AuthRoute = createRoute(checkAuth);\n\nconst checkLogin = () => {\n  if (localStorage.getItem(\"token\")) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const PrivateRoute = createRoute(checkLogin); // export const AdminRoute = createRoute(checkAdmin)","map":{"version":3,"names":["Redirect","Route","createRoute","condition","props","path","component","redirectPath","checkAuth","localStorage","getItem","AuthRoute","checkLogin","PrivateRoute"],"sources":["C:/Users/Administrator/Desktop/New folder/31-08-2022-10-15-45-archive/src/app/Guard.js"],"sourcesContent":["import { Redirect, Route } from \"react-router-dom\";\n\nconst createRoute = (condition) => {\n  return (props) => {\n    const { path, component, redirectPath } = props;\n    if (condition()) {\n      return <Route path={path} component={component} />;\n    }\n    return <Redirect to={redirectPath} />;\n  };\n};\n\nconst checkAuth = () => {\n  if (!localStorage.getItem(\"token\")) {\n    return true;\n  }\n  return false;\n  //check nếu localstorage chưa có token => chưa login => vào\n  // localstorage có token => login => đẩy đi qua home\n};\n\nexport const AuthRoute = createRoute(checkAuth);\n\nconst checkLogin = () => {\n  if (localStorage.getItem(\"token\")) {\n    return true;\n  }\n  return false;\n};\n\nexport const PrivateRoute = createRoute(checkLogin);\n\n// export const AdminRoute = createRoute(checkAdmin)\n"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;;AAEA,MAAMC,WAAW,GAAIC,SAAD,IAAe;EACjC,OAAQC,KAAD,IAAW;IAChB,MAAM;MAAEC,IAAF;MAAQC,SAAR;MAAmBC;IAAnB,IAAoCH,KAA1C;;IACA,IAAID,SAAS,EAAb,EAAiB;MACf,oBAAO,QAAC,KAAD;QAAO,IAAI,EAAEE,IAAb;QAAmB,SAAS,EAAEC;MAA9B;QAAA;QAAA;QAAA;MAAA,QAAP;IACD;;IACD,oBAAO,QAAC,QAAD;MAAU,EAAE,EAAEC;IAAd;MAAA;MAAA;MAAA;IAAA,QAAP;EACD,CAND;AAOD,CARD;;AAUA,MAAMC,SAAS,GAAG,MAAM;EACtB,IAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAL,EAAoC;IAClC,OAAO,IAAP;EACD;;EACD,OAAO,KAAP,CAJsB,CAKtB;EACA;AACD,CAPD;;AASA,OAAO,MAAMC,SAAS,GAAGT,WAAW,CAACM,SAAD,CAA7B;;AAEP,MAAMI,UAAU,GAAG,MAAM;EACvB,IAAIH,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;IACjC,OAAO,IAAP;EACD;;EACD,OAAO,KAAP;AACD,CALD;;AAOA,OAAO,MAAMG,YAAY,GAAGX,WAAW,CAACU,UAAD,CAAhC,C,CAEP"},"metadata":{},"sourceType":"module"}